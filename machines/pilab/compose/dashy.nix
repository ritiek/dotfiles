# Auto-generated using compose2nix v0.2.3.
{ pkgs, lib, ... }:

{
  # Runtime
  virtualisation.docker = {
    enable = true;
    autoPrune.enable = true;
  };
  virtualisation.oci-containers.backend = "docker";

  # Containers
  virtualisation.oci-containers.containers."dashy" = {
    image = "lissy93/dashy";
    environment = {
      "NODE_ENV" = "production";
    };
    volumes = [
      "/media/HOMELAB_MEDIA/services/dashy/config.yml:/app/user-data/conf.yml:rw"
    ];
    ports = [
      "80:8080/tcp"
    ];
    log-driver = "journald";
    autoStart = false;
    extraOptions = [
      "--add-host=host.docker.internal:host-gateway"
      "--health-cmd=[\"node\",\"/app/services/healthcheck\"]"
      "--health-interval=1m30s"
      "--health-retries=3"
      "--health-start-period=40s"
      "--health-timeout=10s"
      "--network-alias=dashy"
      "--network=dashy_default"
    ];
  };
  systemd.services."docker-dashy" = {
    serviceConfig = {
      Restart = lib.mkOverride 500 "always";
      RestartMaxDelaySec = lib.mkOverride 500 "1m";
      RestartSec = lib.mkOverride 500 "100ms";
      RestartSteps = lib.mkOverride 500 9;
      # RootDirectoryStartOnly = lib.mkForce false;
      # RootDirectory = lib.mkForce "";
    };
    after = [
      "docker-network-dashy_default.service"
    ];
    requires = [
      "docker-network-dashy_default.service"
    ];
    unitConfig.RequiresMountsFor = [
      "/media/HOMELAB_MEDIA/services/dashy/config.yml"
    ];
  };

  # Networks
  systemd.services."docker-network-dashy_default" = {
    path = [ pkgs.docker ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "docker network rm -f dashy_default";
    };
    script = ''
      docker network inspect dashy_default || docker network create dashy_default
    '';
    partOf = [ "docker-compose-dashy-root.target" ];
    wantedBy = [ "docker-compose-dashy-root.target" ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-dashy-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
  };
}
