# Auto-generated using compose2nix v0.3.1.
{ config, pkgs, lib, ... }:

{
  sops.secrets."compose/ollama-webui.env" = {
    sopsFile = ./stack.env;
    format = "dotenv";
  };

  virtualisation.docker = {
    enable = true;
    autoPrune.enable = true;
  };
  virtualisation.oci-containers.backend = "docker";

  # Containers
  virtualisation.oci-containers.containers."ollama" = {
    image = "ollama/ollama:latest";
    volumes = [
      "/media/HOMELAB_MEDIA/services/ollama-webui/ollama:/root/.ollama:rw"
    ];
    log-driver = "journald";
    autoStart = false;
    extraOptions = [
      "--network-alias=ollama"
      "--network=ollama-webui_default"
    ];
  };
  systemd.services."docker-ollama" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    after = [
      "docker-network-ollama-webui_default.service"
    ];
    requires = [
      "docker-network-ollama-webui_default.service"
    ];
  };
  virtualisation.oci-containers.containers."open-webui" = {
    image = "ghcr.io/open-webui/open-webui:main";
    # environment = {
    #   "OLLAMA_BASE_URL" = "http://ollama:11434";
    # };
    environmentFiles = [
      config.sops.secrets."compose/ollama-webui.env".path
    ];
    volumes = [
      "/media/HOMELAB_MEDIA/services/ollama-webui/open-webui:/app/backend/data:rw"
    ];
    ports = [
      "3020:8080/tcp"
    ];
    # Removed dependsOn to make services independent
    log-driver = "journald";
    autoStart = false;
    extraOptions = [
      "--add-host=host.docker.internal:host-gateway"
      "--network-alias=open-webui"
      "--network=ollama-webui_default"
    ];
    labels = {
      "homepage.description" = "Open WebUI";
      "homepage.group" = "Services";
      "homepage.href" = "http://pilab.lion-zebra.ts.net:3020/admin";
      "homepage.icon" = "ollama.png";
      "homepage.name" = "Ollama";
    };
  };
  systemd.services."docker-open-webui" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    after = [
      "docker-network-ollama-webui_default.service"
    ];
    requires = [
      "docker-network-ollama-webui_default.service"
    ];
  };

  # Networks
  systemd.services."docker-network-ollama-webui_default" = {
    path = [ pkgs.docker ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "docker network rm -f ollama-webui_default";
    };
    script = ''
      docker network inspect ollama-webui_default || docker network create ollama-webui_default
    '';
    partOf = [ "docker-compose-ollama-webui-root.target" ];
    wantedBy = [ "docker-compose-ollama-webui-root.target" ];
  };

  # Builds
  # systemd.services."docker-build-open-webui" = {
  #   path = [ pkgs.docker pkgs.git ];
  #   serviceConfig = {
  #     Type = "oneshot";
  #     TimeoutSec = 300;
  #   };
  #   script = ''
  #     cd /etc/nixos
  #     docker build -t ghcr.io/open-webui/open-webui:main --build-arg OLLAMA_BASE_URL=/ollama .
  #   '';
  # };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-ollama-webui-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
  };
}
