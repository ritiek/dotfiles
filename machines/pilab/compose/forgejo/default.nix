# Auto-generated using compose2nix v0.2.3.
{ pkgs, lib, config, ... }:

{
  sops.secrets."compose/forgejo.env" = {
    sopsFile = ./stack.env;
    format = "dotenv";
  };

  # Runtime
  virtualisation.docker = {
    enable = true;
    autoPrune.enable = true;
  };
  virtualisation.oci-containers.backend = "docker";

  # Containers
  virtualisation.oci-containers.containers."forgejo" = {
    image = "codeberg.org/forgejo/forgejo:12";
    environmentFiles = [
      config.sops.secrets."compose/forgejo.env".path
    ];
    volumes = [
      "/etc/localtime:/etc/localtime:ro"
      "/etc/timezone:/etc/timezone:ro"
      "/media/HOMELAB_MEDIA/services/forgejo/server:/data:rw"
    ];
    ports = [
      "3033:3033/tcp"
      "3022:22/tcp"
    ];
    dependsOn = [
      "forgejo-db"
    ];
    log-driver = "journald";
    autoStart = false;
    extraOptions = [
      "--add-host=host.docker.internal:host-gateway"
      "--dns=1.1.1.1"
      "--dns=100.100.100.100"
      "--dns=172.17.0.1"
      "--dns=8.8.8.8"
      "--network-alias=server"
      "--network=forgejo_forgejo"
    ];
    labels = {
      "homepage.description" = "Git in a forge";
      "homepage.group" = "Services";
      "homepage.href" = "http://pilab.lion-zebra.ts.net:3033";
      "homepage.icon" = "forgejo";
      "homepage.name" = "Forgejo";
    };
  };
  systemd.services."docker-forgejo" = {
    serviceConfig = {
      Restart = lib.mkOverride 500 "always";
      RestartMaxDelaySec = lib.mkOverride 500 "1m";
      RestartSec = lib.mkOverride 500 "100ms";
      RestartSteps = lib.mkOverride 500 9;
    };
    after = [
      "docker-network-forgejo_forgejo.service"
    ];
    requires = [
      "docker-network-forgejo_forgejo.service"
    ];
    unitConfig.RequiresMountsFor = [
      "/etc/localtime"
      "/etc/timezone"
      "/media/HOMELAB_MEDIA/services/forgejo/server"
    ];
  };
  virtualisation.oci-containers.containers."forgejo-db" = {
    image = "postgres:14";
    environmentFiles = [
      config.sops.secrets."compose/forgejo.env".path
    ];
    volumes = [
      "/media/HOMELAB_MEDIA/services/forgejo/db:/var/lib/postgresql/data:rw"
    ];
    log-driver = "journald";
    autoStart = false;
    extraOptions = [
      "--network-alias=db"
      "--network=forgejo_forgejo"
    ];
  };
  systemd.services."docker-forgejo-db" = {
    serviceConfig = {
      Restart = lib.mkOverride 500 "always";
      RestartMaxDelaySec = lib.mkOverride 500 "1m";
      RestartSec = lib.mkOverride 500 "100ms";
      RestartSteps = lib.mkOverride 500 9;
    };
    after = [
      "docker-network-forgejo_forgejo.service"
    ];
    requires = [
      "docker-network-forgejo_forgejo.service"
    ];
    unitConfig.RequiresMountsFor = [
      "/media/HOMELAB_MEDIA/services/forgejo/db"
    ];
  };

  # Networks
  systemd.services."docker-network-forgejo_forgejo" = {
    path = [ pkgs.docker ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "docker network rm -f forgejo_forgejo";
    };
    script = ''
      docker network inspect forgejo_forgejo || docker network create forgejo_forgejo
    '';
    partOf = [ "docker-compose-forgejo-root.target" ];
    wantedBy = [ "docker-compose-forgejo-root.target" ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-forgejo-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
  };
}
